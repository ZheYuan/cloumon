/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package org.cloumon.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class SystemMachineInfo implements org.apache.thrift.TBase<SystemMachineInfo, SystemMachineInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SystemMachineInfo");

  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ARCH_FIELD_DESC = new org.apache.thrift.protocol.TField("arch", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField MACHINE_FIELD_DESC = new org.apache.thrift.protocol.TField("machine", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField PATCH_LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("patchLevel", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField VENDOR_FIELD_DESC = new org.apache.thrift.protocol.TField("vendor", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField VENDOR_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("vendorVersion", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField VENDOR_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("vendorName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField VENDOR_CODE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("vendorCodeName", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DATA_MODEL_FIELD_DESC = new org.apache.thrift.protocol.TField("dataModel", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CPU_ENDIAN_FIELD_DESC = new org.apache.thrift.protocol.TField("cpuEndian", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField JVM_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmVersion", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField JVM_VENDOR_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmVendor", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField JVM_HOME_FIELD_DESC = new org.apache.thrift.protocol.TField("jvmHome", org.apache.thrift.protocol.TType.STRING, (short)15);

  public String name;
  public String version;
  public String arch;
  public String machine;
  public String description;
  public String patchLevel;
  public String vendor;
  public String vendorVersion;
  public String vendorName;
  public String vendorCodeName;
  public String dataModel;
  public String cpuEndian;
  public String jvmVersion;
  public String jvmVendor;
  public String jvmHome;

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAME((short)1, "name"),
    VERSION((short)2, "version"),
    ARCH((short)3, "arch"),
    MACHINE((short)4, "machine"),
    DESCRIPTION((short)5, "description"),
    PATCH_LEVEL((short)6, "patchLevel"),
    VENDOR((short)7, "vendor"),
    VENDOR_VERSION((short)8, "vendorVersion"),
    VENDOR_NAME((short)9, "vendorName"),
    VENDOR_CODE_NAME((short)10, "vendorCodeName"),
    DATA_MODEL((short)11, "dataModel"),
    CPU_ENDIAN((short)12, "cpuEndian"),
    JVM_VERSION((short)13, "jvmVersion"),
    JVM_VENDOR((short)14, "jvmVendor"),
    JVM_HOME((short)15, "jvmHome");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAME
          return NAME;
        case 2: // VERSION
          return VERSION;
        case 3: // ARCH
          return ARCH;
        case 4: // MACHINE
          return MACHINE;
        case 5: // DESCRIPTION
          return DESCRIPTION;
        case 6: // PATCH_LEVEL
          return PATCH_LEVEL;
        case 7: // VENDOR
          return VENDOR;
        case 8: // VENDOR_VERSION
          return VENDOR_VERSION;
        case 9: // VENDOR_NAME
          return VENDOR_NAME;
        case 10: // VENDOR_CODE_NAME
          return VENDOR_CODE_NAME;
        case 11: // DATA_MODEL
          return DATA_MODEL;
        case 12: // CPU_ENDIAN
          return CPU_ENDIAN;
        case 13: // JVM_VERSION
          return JVM_VERSION;
        case 14: // JVM_VENDOR
          return JVM_VENDOR;
        case 15: // JVM_HOME
          return JVM_HOME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments

  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ARCH, new org.apache.thrift.meta_data.FieldMetaData("arch", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MACHINE, new org.apache.thrift.meta_data.FieldMetaData("machine", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PATCH_LEVEL, new org.apache.thrift.meta_data.FieldMetaData("patchLevel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VENDOR, new org.apache.thrift.meta_data.FieldMetaData("vendor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VENDOR_VERSION, new org.apache.thrift.meta_data.FieldMetaData("vendorVersion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VENDOR_NAME, new org.apache.thrift.meta_data.FieldMetaData("vendorName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VENDOR_CODE_NAME, new org.apache.thrift.meta_data.FieldMetaData("vendorCodeName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATA_MODEL, new org.apache.thrift.meta_data.FieldMetaData("dataModel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CPU_ENDIAN, new org.apache.thrift.meta_data.FieldMetaData("cpuEndian", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JVM_VERSION, new org.apache.thrift.meta_data.FieldMetaData("jvmVersion", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JVM_VENDOR, new org.apache.thrift.meta_data.FieldMetaData("jvmVendor", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JVM_HOME, new org.apache.thrift.meta_data.FieldMetaData("jvmHome", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SystemMachineInfo.class, metaDataMap);
  }

  public SystemMachineInfo() {
  }

  public SystemMachineInfo(
    String name,
    String version,
    String arch,
    String machine,
    String description,
    String patchLevel,
    String vendor,
    String vendorVersion,
    String vendorName,
    String vendorCodeName,
    String dataModel,
    String cpuEndian,
    String jvmVersion,
    String jvmVendor,
    String jvmHome)
  {
    this();
    this.name = name;
    this.version = version;
    this.arch = arch;
    this.machine = machine;
    this.description = description;
    this.patchLevel = patchLevel;
    this.vendor = vendor;
    this.vendorVersion = vendorVersion;
    this.vendorName = vendorName;
    this.vendorCodeName = vendorCodeName;
    this.dataModel = dataModel;
    this.cpuEndian = cpuEndian;
    this.jvmVersion = jvmVersion;
    this.jvmVendor = jvmVendor;
    this.jvmHome = jvmHome;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SystemMachineInfo(SystemMachineInfo other) {
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetVersion()) {
      this.version = other.version;
    }
    if (other.isSetArch()) {
      this.arch = other.arch;
    }
    if (other.isSetMachine()) {
      this.machine = other.machine;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetPatchLevel()) {
      this.patchLevel = other.patchLevel;
    }
    if (other.isSetVendor()) {
      this.vendor = other.vendor;
    }
    if (other.isSetVendorVersion()) {
      this.vendorVersion = other.vendorVersion;
    }
    if (other.isSetVendorName()) {
      this.vendorName = other.vendorName;
    }
    if (other.isSetVendorCodeName()) {
      this.vendorCodeName = other.vendorCodeName;
    }
    if (other.isSetDataModel()) {
      this.dataModel = other.dataModel;
    }
    if (other.isSetCpuEndian()) {
      this.cpuEndian = other.cpuEndian;
    }
    if (other.isSetJvmVersion()) {
      this.jvmVersion = other.jvmVersion;
    }
    if (other.isSetJvmVendor()) {
      this.jvmVendor = other.jvmVendor;
    }
    if (other.isSetJvmHome()) {
      this.jvmHome = other.jvmHome;
    }
  }

  public SystemMachineInfo deepCopy() {
    return new SystemMachineInfo(this);
  }

  @Override
  public void clear() {
    this.name = null;
    this.version = null;
    this.arch = null;
    this.machine = null;
    this.description = null;
    this.patchLevel = null;
    this.vendor = null;
    this.vendorVersion = null;
    this.vendorName = null;
    this.vendorCodeName = null;
    this.dataModel = null;
    this.cpuEndian = null;
    this.jvmVersion = null;
    this.jvmVendor = null;
    this.jvmHome = null;
  }

  public String getName() {
    return this.name;
  }

  public SystemMachineInfo setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getVersion() {
    return this.version;
  }

  public SystemMachineInfo setVersion(String version) {
    this.version = version;
    return this;
  }

  public void unsetVersion() {
    this.version = null;
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return this.version != null;
  }

  public void setVersionIsSet(boolean value) {
    if (!value) {
      this.version = null;
    }
  }

  public String getArch() {
    return this.arch;
  }

  public SystemMachineInfo setArch(String arch) {
    this.arch = arch;
    return this;
  }

  public void unsetArch() {
    this.arch = null;
  }

  /** Returns true if field arch is set (has been assigned a value) and false otherwise */
  public boolean isSetArch() {
    return this.arch != null;
  }

  public void setArchIsSet(boolean value) {
    if (!value) {
      this.arch = null;
    }
  }

  public String getMachine() {
    return this.machine;
  }

  public SystemMachineInfo setMachine(String machine) {
    this.machine = machine;
    return this;
  }

  public void unsetMachine() {
    this.machine = null;
  }

  /** Returns true if field machine is set (has been assigned a value) and false otherwise */
  public boolean isSetMachine() {
    return this.machine != null;
  }

  public void setMachineIsSet(boolean value) {
    if (!value) {
      this.machine = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public SystemMachineInfo setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getPatchLevel() {
    return this.patchLevel;
  }

  public SystemMachineInfo setPatchLevel(String patchLevel) {
    this.patchLevel = patchLevel;
    return this;
  }

  public void unsetPatchLevel() {
    this.patchLevel = null;
  }

  /** Returns true if field patchLevel is set (has been assigned a value) and false otherwise */
  public boolean isSetPatchLevel() {
    return this.patchLevel != null;
  }

  public void setPatchLevelIsSet(boolean value) {
    if (!value) {
      this.patchLevel = null;
    }
  }

  public String getVendor() {
    return this.vendor;
  }

  public SystemMachineInfo setVendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

  public void unsetVendor() {
    this.vendor = null;
  }

  /** Returns true if field vendor is set (has been assigned a value) and false otherwise */
  public boolean isSetVendor() {
    return this.vendor != null;
  }

  public void setVendorIsSet(boolean value) {
    if (!value) {
      this.vendor = null;
    }
  }

  public String getVendorVersion() {
    return this.vendorVersion;
  }

  public SystemMachineInfo setVendorVersion(String vendorVersion) {
    this.vendorVersion = vendorVersion;
    return this;
  }

  public void unsetVendorVersion() {
    this.vendorVersion = null;
  }

  /** Returns true if field vendorVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetVendorVersion() {
    return this.vendorVersion != null;
  }

  public void setVendorVersionIsSet(boolean value) {
    if (!value) {
      this.vendorVersion = null;
    }
  }

  public String getVendorName() {
    return this.vendorName;
  }

  public SystemMachineInfo setVendorName(String vendorName) {
    this.vendorName = vendorName;
    return this;
  }

  public void unsetVendorName() {
    this.vendorName = null;
  }

  /** Returns true if field vendorName is set (has been assigned a value) and false otherwise */
  public boolean isSetVendorName() {
    return this.vendorName != null;
  }

  public void setVendorNameIsSet(boolean value) {
    if (!value) {
      this.vendorName = null;
    }
  }

  public String getVendorCodeName() {
    return this.vendorCodeName;
  }

  public SystemMachineInfo setVendorCodeName(String vendorCodeName) {
    this.vendorCodeName = vendorCodeName;
    return this;
  }

  public void unsetVendorCodeName() {
    this.vendorCodeName = null;
  }

  /** Returns true if field vendorCodeName is set (has been assigned a value) and false otherwise */
  public boolean isSetVendorCodeName() {
    return this.vendorCodeName != null;
  }

  public void setVendorCodeNameIsSet(boolean value) {
    if (!value) {
      this.vendorCodeName = null;
    }
  }

  public String getDataModel() {
    return this.dataModel;
  }

  public SystemMachineInfo setDataModel(String dataModel) {
    this.dataModel = dataModel;
    return this;
  }

  public void unsetDataModel() {
    this.dataModel = null;
  }

  /** Returns true if field dataModel is set (has been assigned a value) and false otherwise */
  public boolean isSetDataModel() {
    return this.dataModel != null;
  }

  public void setDataModelIsSet(boolean value) {
    if (!value) {
      this.dataModel = null;
    }
  }

  public String getCpuEndian() {
    return this.cpuEndian;
  }

  public SystemMachineInfo setCpuEndian(String cpuEndian) {
    this.cpuEndian = cpuEndian;
    return this;
  }

  public void unsetCpuEndian() {
    this.cpuEndian = null;
  }

  /** Returns true if field cpuEndian is set (has been assigned a value) and false otherwise */
  public boolean isSetCpuEndian() {
    return this.cpuEndian != null;
  }

  public void setCpuEndianIsSet(boolean value) {
    if (!value) {
      this.cpuEndian = null;
    }
  }

  public String getJvmVersion() {
    return this.jvmVersion;
  }

  public SystemMachineInfo setJvmVersion(String jvmVersion) {
    this.jvmVersion = jvmVersion;
    return this;
  }

  public void unsetJvmVersion() {
    this.jvmVersion = null;
  }

  /** Returns true if field jvmVersion is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmVersion() {
    return this.jvmVersion != null;
  }

  public void setJvmVersionIsSet(boolean value) {
    if (!value) {
      this.jvmVersion = null;
    }
  }

  public String getJvmVendor() {
    return this.jvmVendor;
  }

  public SystemMachineInfo setJvmVendor(String jvmVendor) {
    this.jvmVendor = jvmVendor;
    return this;
  }

  public void unsetJvmVendor() {
    this.jvmVendor = null;
  }

  /** Returns true if field jvmVendor is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmVendor() {
    return this.jvmVendor != null;
  }

  public void setJvmVendorIsSet(boolean value) {
    if (!value) {
      this.jvmVendor = null;
    }
  }

  public String getJvmHome() {
    return this.jvmHome;
  }

  public SystemMachineInfo setJvmHome(String jvmHome) {
    this.jvmHome = jvmHome;
    return this;
  }

  public void unsetJvmHome() {
    this.jvmHome = null;
  }

  /** Returns true if field jvmHome is set (has been assigned a value) and false otherwise */
  public boolean isSetJvmHome() {
    return this.jvmHome != null;
  }

  public void setJvmHomeIsSet(boolean value) {
    if (!value) {
      this.jvmHome = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((String)value);
      }
      break;

    case ARCH:
      if (value == null) {
        unsetArch();
      } else {
        setArch((String)value);
      }
      break;

    case MACHINE:
      if (value == null) {
        unsetMachine();
      } else {
        setMachine((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case PATCH_LEVEL:
      if (value == null) {
        unsetPatchLevel();
      } else {
        setPatchLevel((String)value);
      }
      break;

    case VENDOR:
      if (value == null) {
        unsetVendor();
      } else {
        setVendor((String)value);
      }
      break;

    case VENDOR_VERSION:
      if (value == null) {
        unsetVendorVersion();
      } else {
        setVendorVersion((String)value);
      }
      break;

    case VENDOR_NAME:
      if (value == null) {
        unsetVendorName();
      } else {
        setVendorName((String)value);
      }
      break;

    case VENDOR_CODE_NAME:
      if (value == null) {
        unsetVendorCodeName();
      } else {
        setVendorCodeName((String)value);
      }
      break;

    case DATA_MODEL:
      if (value == null) {
        unsetDataModel();
      } else {
        setDataModel((String)value);
      }
      break;

    case CPU_ENDIAN:
      if (value == null) {
        unsetCpuEndian();
      } else {
        setCpuEndian((String)value);
      }
      break;

    case JVM_VERSION:
      if (value == null) {
        unsetJvmVersion();
      } else {
        setJvmVersion((String)value);
      }
      break;

    case JVM_VENDOR:
      if (value == null) {
        unsetJvmVendor();
      } else {
        setJvmVendor((String)value);
      }
      break;

    case JVM_HOME:
      if (value == null) {
        unsetJvmHome();
      } else {
        setJvmHome((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case NAME:
      return getName();

    case VERSION:
      return getVersion();

    case ARCH:
      return getArch();

    case MACHINE:
      return getMachine();

    case DESCRIPTION:
      return getDescription();

    case PATCH_LEVEL:
      return getPatchLevel();

    case VENDOR:
      return getVendor();

    case VENDOR_VERSION:
      return getVendorVersion();

    case VENDOR_NAME:
      return getVendorName();

    case VENDOR_CODE_NAME:
      return getVendorCodeName();

    case DATA_MODEL:
      return getDataModel();

    case CPU_ENDIAN:
      return getCpuEndian();

    case JVM_VERSION:
      return getJvmVersion();

    case JVM_VENDOR:
      return getJvmVendor();

    case JVM_HOME:
      return getJvmHome();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case NAME:
      return isSetName();
    case VERSION:
      return isSetVersion();
    case ARCH:
      return isSetArch();
    case MACHINE:
      return isSetMachine();
    case DESCRIPTION:
      return isSetDescription();
    case PATCH_LEVEL:
      return isSetPatchLevel();
    case VENDOR:
      return isSetVendor();
    case VENDOR_VERSION:
      return isSetVendorVersion();
    case VENDOR_NAME:
      return isSetVendorName();
    case VENDOR_CODE_NAME:
      return isSetVendorCodeName();
    case DATA_MODEL:
      return isSetDataModel();
    case CPU_ENDIAN:
      return isSetCpuEndian();
    case JVM_VERSION:
      return isSetJvmVersion();
    case JVM_VENDOR:
      return isSetJvmVendor();
    case JVM_HOME:
      return isSetJvmHome();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof SystemMachineInfo)
      return this.equals((SystemMachineInfo)that);
    return false;
  }

  public boolean equals(SystemMachineInfo that) {
    if (that == null)
      return false;

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_version = true && this.isSetVersion();
    boolean that_present_version = true && that.isSetVersion();
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (!this.version.equals(that.version))
        return false;
    }

    boolean this_present_arch = true && this.isSetArch();
    boolean that_present_arch = true && that.isSetArch();
    if (this_present_arch || that_present_arch) {
      if (!(this_present_arch && that_present_arch))
        return false;
      if (!this.arch.equals(that.arch))
        return false;
    }

    boolean this_present_machine = true && this.isSetMachine();
    boolean that_present_machine = true && that.isSetMachine();
    if (this_present_machine || that_present_machine) {
      if (!(this_present_machine && that_present_machine))
        return false;
      if (!this.machine.equals(that.machine))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_patchLevel = true && this.isSetPatchLevel();
    boolean that_present_patchLevel = true && that.isSetPatchLevel();
    if (this_present_patchLevel || that_present_patchLevel) {
      if (!(this_present_patchLevel && that_present_patchLevel))
        return false;
      if (!this.patchLevel.equals(that.patchLevel))
        return false;
    }

    boolean this_present_vendor = true && this.isSetVendor();
    boolean that_present_vendor = true && that.isSetVendor();
    if (this_present_vendor || that_present_vendor) {
      if (!(this_present_vendor && that_present_vendor))
        return false;
      if (!this.vendor.equals(that.vendor))
        return false;
    }

    boolean this_present_vendorVersion = true && this.isSetVendorVersion();
    boolean that_present_vendorVersion = true && that.isSetVendorVersion();
    if (this_present_vendorVersion || that_present_vendorVersion) {
      if (!(this_present_vendorVersion && that_present_vendorVersion))
        return false;
      if (!this.vendorVersion.equals(that.vendorVersion))
        return false;
    }

    boolean this_present_vendorName = true && this.isSetVendorName();
    boolean that_present_vendorName = true && that.isSetVendorName();
    if (this_present_vendorName || that_present_vendorName) {
      if (!(this_present_vendorName && that_present_vendorName))
        return false;
      if (!this.vendorName.equals(that.vendorName))
        return false;
    }

    boolean this_present_vendorCodeName = true && this.isSetVendorCodeName();
    boolean that_present_vendorCodeName = true && that.isSetVendorCodeName();
    if (this_present_vendorCodeName || that_present_vendorCodeName) {
      if (!(this_present_vendorCodeName && that_present_vendorCodeName))
        return false;
      if (!this.vendorCodeName.equals(that.vendorCodeName))
        return false;
    }

    boolean this_present_dataModel = true && this.isSetDataModel();
    boolean that_present_dataModel = true && that.isSetDataModel();
    if (this_present_dataModel || that_present_dataModel) {
      if (!(this_present_dataModel && that_present_dataModel))
        return false;
      if (!this.dataModel.equals(that.dataModel))
        return false;
    }

    boolean this_present_cpuEndian = true && this.isSetCpuEndian();
    boolean that_present_cpuEndian = true && that.isSetCpuEndian();
    if (this_present_cpuEndian || that_present_cpuEndian) {
      if (!(this_present_cpuEndian && that_present_cpuEndian))
        return false;
      if (!this.cpuEndian.equals(that.cpuEndian))
        return false;
    }

    boolean this_present_jvmVersion = true && this.isSetJvmVersion();
    boolean that_present_jvmVersion = true && that.isSetJvmVersion();
    if (this_present_jvmVersion || that_present_jvmVersion) {
      if (!(this_present_jvmVersion && that_present_jvmVersion))
        return false;
      if (!this.jvmVersion.equals(that.jvmVersion))
        return false;
    }

    boolean this_present_jvmVendor = true && this.isSetJvmVendor();
    boolean that_present_jvmVendor = true && that.isSetJvmVendor();
    if (this_present_jvmVendor || that_present_jvmVendor) {
      if (!(this_present_jvmVendor && that_present_jvmVendor))
        return false;
      if (!this.jvmVendor.equals(that.jvmVendor))
        return false;
    }

    boolean this_present_jvmHome = true && this.isSetJvmHome();
    boolean that_present_jvmHome = true && that.isSetJvmHome();
    if (this_present_jvmHome || that_present_jvmHome) {
      if (!(this_present_jvmHome && that_present_jvmHome))
        return false;
      if (!this.jvmHome.equals(that.jvmHome))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(SystemMachineInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    SystemMachineInfo typedOther = (SystemMachineInfo)other;

    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(typedOther.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, typedOther.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetArch()).compareTo(typedOther.isSetArch());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetArch()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.arch, typedOther.arch);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMachine()).compareTo(typedOther.isSetMachine());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMachine()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.machine, typedOther.machine);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(typedOther.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, typedOther.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPatchLevel()).compareTo(typedOther.isSetPatchLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPatchLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.patchLevel, typedOther.patchLevel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVendor()).compareTo(typedOther.isSetVendor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVendor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vendor, typedOther.vendor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVendorVersion()).compareTo(typedOther.isSetVendorVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVendorVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vendorVersion, typedOther.vendorVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVendorName()).compareTo(typedOther.isSetVendorName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVendorName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vendorName, typedOther.vendorName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVendorCodeName()).compareTo(typedOther.isSetVendorCodeName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVendorCodeName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vendorCodeName, typedOther.vendorCodeName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDataModel()).compareTo(typedOther.isSetDataModel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDataModel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.dataModel, typedOther.dataModel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCpuEndian()).compareTo(typedOther.isSetCpuEndian());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCpuEndian()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cpuEndian, typedOther.cpuEndian);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmVersion()).compareTo(typedOther.isSetJvmVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmVersion, typedOther.jvmVersion);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmVendor()).compareTo(typedOther.isSetJvmVendor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmVendor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmVendor, typedOther.jvmVendor);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetJvmHome()).compareTo(typedOther.isSetJvmHome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJvmHome()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jvmHome, typedOther.jvmHome);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    org.apache.thrift.protocol.TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == org.apache.thrift.protocol.TType.STOP) { 
        break;
      }
      switch (field.id) {
        case 1: // NAME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.name = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2: // VERSION
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.version = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3: // ARCH
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.arch = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4: // MACHINE
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.machine = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5: // DESCRIPTION
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.description = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6: // PATCH_LEVEL
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.patchLevel = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7: // VENDOR
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.vendor = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8: // VENDOR_VERSION
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.vendorVersion = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9: // VENDOR_NAME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.vendorName = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10: // VENDOR_CODE_NAME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.vendorCodeName = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 11: // DATA_MODEL
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.dataModel = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 12: // CPU_ENDIAN
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.cpuEndian = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 13: // JVM_VERSION
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.jvmVersion = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 14: // JVM_VENDOR
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.jvmVendor = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 15: // JVM_HOME
          if (field.type == org.apache.thrift.protocol.TType.STRING) {
            this.jvmHome = iprot.readString();
          } else { 
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          org.apache.thrift.protocol.TProtocolUtil.skip(iprot, field.type);
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();

    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.name != null) {
      oprot.writeFieldBegin(NAME_FIELD_DESC);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    if (this.version != null) {
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeString(this.version);
      oprot.writeFieldEnd();
    }
    if (this.arch != null) {
      oprot.writeFieldBegin(ARCH_FIELD_DESC);
      oprot.writeString(this.arch);
      oprot.writeFieldEnd();
    }
    if (this.machine != null) {
      oprot.writeFieldBegin(MACHINE_FIELD_DESC);
      oprot.writeString(this.machine);
      oprot.writeFieldEnd();
    }
    if (this.description != null) {
      oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
      oprot.writeString(this.description);
      oprot.writeFieldEnd();
    }
    if (this.patchLevel != null) {
      oprot.writeFieldBegin(PATCH_LEVEL_FIELD_DESC);
      oprot.writeString(this.patchLevel);
      oprot.writeFieldEnd();
    }
    if (this.vendor != null) {
      oprot.writeFieldBegin(VENDOR_FIELD_DESC);
      oprot.writeString(this.vendor);
      oprot.writeFieldEnd();
    }
    if (this.vendorVersion != null) {
      oprot.writeFieldBegin(VENDOR_VERSION_FIELD_DESC);
      oprot.writeString(this.vendorVersion);
      oprot.writeFieldEnd();
    }
    if (this.vendorName != null) {
      oprot.writeFieldBegin(VENDOR_NAME_FIELD_DESC);
      oprot.writeString(this.vendorName);
      oprot.writeFieldEnd();
    }
    if (this.vendorCodeName != null) {
      oprot.writeFieldBegin(VENDOR_CODE_NAME_FIELD_DESC);
      oprot.writeString(this.vendorCodeName);
      oprot.writeFieldEnd();
    }
    if (this.dataModel != null) {
      oprot.writeFieldBegin(DATA_MODEL_FIELD_DESC);
      oprot.writeString(this.dataModel);
      oprot.writeFieldEnd();
    }
    if (this.cpuEndian != null) {
      oprot.writeFieldBegin(CPU_ENDIAN_FIELD_DESC);
      oprot.writeString(this.cpuEndian);
      oprot.writeFieldEnd();
    }
    if (this.jvmVersion != null) {
      oprot.writeFieldBegin(JVM_VERSION_FIELD_DESC);
      oprot.writeString(this.jvmVersion);
      oprot.writeFieldEnd();
    }
    if (this.jvmVendor != null) {
      oprot.writeFieldBegin(JVM_VENDOR_FIELD_DESC);
      oprot.writeString(this.jvmVendor);
      oprot.writeFieldEnd();
    }
    if (this.jvmHome != null) {
      oprot.writeFieldBegin(JVM_HOME_FIELD_DESC);
      oprot.writeString(this.jvmHome);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("SystemMachineInfo(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    if (this.version == null) {
      sb.append("null");
    } else {
      sb.append(this.version);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("arch:");
    if (this.arch == null) {
      sb.append("null");
    } else {
      sb.append(this.arch);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("machine:");
    if (this.machine == null) {
      sb.append("null");
    } else {
      sb.append(this.machine);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("description:");
    if (this.description == null) {
      sb.append("null");
    } else {
      sb.append(this.description);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("patchLevel:");
    if (this.patchLevel == null) {
      sb.append("null");
    } else {
      sb.append(this.patchLevel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vendor:");
    if (this.vendor == null) {
      sb.append("null");
    } else {
      sb.append(this.vendor);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vendorVersion:");
    if (this.vendorVersion == null) {
      sb.append("null");
    } else {
      sb.append(this.vendorVersion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vendorName:");
    if (this.vendorName == null) {
      sb.append("null");
    } else {
      sb.append(this.vendorName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("vendorCodeName:");
    if (this.vendorCodeName == null) {
      sb.append("null");
    } else {
      sb.append(this.vendorCodeName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("dataModel:");
    if (this.dataModel == null) {
      sb.append("null");
    } else {
      sb.append(this.dataModel);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("cpuEndian:");
    if (this.cpuEndian == null) {
      sb.append("null");
    } else {
      sb.append(this.cpuEndian);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmVersion:");
    if (this.jvmVersion == null) {
      sb.append("null");
    } else {
      sb.append(this.jvmVersion);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmVendor:");
    if (this.jvmVendor == null) {
      sb.append("null");
    } else {
      sb.append(this.jvmVendor);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jvmHome:");
    if (this.jvmHome == null) {
      sb.append("null");
    } else {
      sb.append(this.jvmHome);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

}

